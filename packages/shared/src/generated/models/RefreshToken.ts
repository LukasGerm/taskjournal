/* tslint:disable */
/* eslint-disable */
/**
 * Data Models
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RefreshToken
 */
export interface RefreshToken {
    /**
     * 
     * @type {string}
     * @memberof RefreshToken
     */
    token: string;
    /**
     * 
     * @type {number}
     * @memberof RefreshToken
     */
    userId: number;
    /**
     * 
     * @type {Date}
     * @memberof RefreshToken
     */
    expires: Date;
}

/**
 * Check if a given object implements the RefreshToken interface.
 */
export function instanceOfRefreshToken(value: object): value is RefreshToken {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('expires' in value) || value['expires'] === undefined) return false;
    return true;
}

export function RefreshTokenFromJSON(json: any): RefreshToken {
    return RefreshTokenFromJSONTyped(json, false);
}

export function RefreshTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefreshToken {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'],
        'userId': json['userId'],
        'expires': (new Date(json['expires'])),
    };
}

export function RefreshTokenToJSON(json: any): RefreshToken {
    return RefreshTokenToJSONTyped(json, false);
}

export function RefreshTokenToJSONTyped(value?: RefreshToken | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': value['token'],
        'userId': value['userId'],
        'expires': ((value['expires']).toISOString()),
    };
}

