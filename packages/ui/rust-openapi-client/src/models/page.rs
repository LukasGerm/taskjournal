/*
 * Data Models
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Page {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "userId")]
    pub user_id: uuid::Uuid,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
}

impl Page {
    pub fn new(id: uuid::Uuid, content: String, user_id: uuid::Uuid) -> Page {
        Page {
            id,
            content,
            user_id,
            created_at: None,
            updated_at: None,
        }
    }
}

