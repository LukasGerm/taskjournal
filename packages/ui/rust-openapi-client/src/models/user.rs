/*
 * Data Models
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "passwordHash")]
    pub password_hash: String,
    #[serde(rename = "refreshTokens", skip_serializing_if = "Option::is_none")]
    pub refresh_tokens: Option<Vec<models::RefreshToken>>,
}

impl User {
    pub fn new(id: uuid::Uuid, email: String, username: String, password_hash: String) -> User {
        User {
            id,
            first_name: None,
            last_name: None,
            email,
            username,
            password_hash,
            refresh_tokens: None,
        }
    }
}
